name: Terraform Deploy

on:
  workflow_dispatch:
    inputs:
      app_name:
        description: 'App name to deploy (must exist in apps.json)'
        required: true
        type: string

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    defaults:
      run:
        working-directory: terraform
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_region: ${{ vars.REGION }}
      TF_VAR_short_region: ${{ vars.SHORT_REGION }}

    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.ref || github.ref }}

    - name: Upgrade AWS CLI v2
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip -q awscliv2.zip
        sudo ./aws/install --update
        aws --version
        aws cognito-idp update-managed-login-branding help | grep -- "--app-client-id" || (echo "❌ CLI too old, upgrade failed" && exit 1)

    - name: Determine Environment from Branch
      id: set-env
      run: |
        BRANCH=$(git rev-parse --abbrev-ref HEAD)
        case $BRANCH in
          develop) echo "TF_VAR_env=dev" >> $GITHUB_ENV ;;
          staging) echo "TF_VAR_env=stg" >> $GITHUB_ENV ;;
          main) echo "TF_VAR_env=prod" >> $GITHUB_ENV ;;
          *) echo "Unsupported branch: $BRANCH"; exit 1 ;;
        esac
        echo "Environment set to: $TF_VAR_env"

    - uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.0

    - name: Validate App Name from apps.json
      working-directory: .
      run: |
        APP_NAME="${{ github.event.inputs.app_name }}"
        if ! jq -e ".[] | select(.name == \"$APP_NAME\")" apps.json > /dev/null; then
          echo "❌ Error: App '$APP_NAME' not found in apps.json"
          exit 1
        fi
        echo "✅ App '$APP_NAME' found in apps.json"

    - name: Terraform Init
      run: |
        terraform init \
          -backend-config="bucket=terraform-state-test-cognito" \
          -backend-config="key=cognito-app-clients/$TF_VAR_env/${{ github.event.inputs.app_name }}/terraform.tfstate" \
          -backend-config="region=$TF_VAR_region"

    - name: Terraform Plan
      run: |
        terraform plan \
          -var="env=$TF_VAR_env" \
          -var="region=$TF_VAR_region" \
          -var="app_name=${{ github.event.inputs.app_name }}" \
          -out=plan.tfout

    - name: Terraform Apply
      run: terraform apply -auto-approve plan.tfout
